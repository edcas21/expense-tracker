[{"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\index.js":"1","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\App.js":"2","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\index.js":"3","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Details\\Details.jsx":"4","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Details\\Details.styles.js":"5","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\styles.js":"6","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Main.jsx":"7","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Main.styles.js":"8","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Form\\Form.jsx":"9","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Form\\Form.styles.js":"10","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\List\\List.jsx":"11","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\List\\Lists.styles.js":"12","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\context\\context.js":"13","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\context\\contextReducer.js":"14","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\constants\\categories.js":"15","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\utils\\formatDate.js":"16","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\useTransactions.js":"17","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Snackbar\\Snackbar.jsx":"18","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Snackbar\\Snackbar.styles.js":"19","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\InfoCard.jsx":"20"},{"size":444,"mtime":1622907056000,"results":"21","hashOfConfig":"22"},{"size":1532,"mtime":1622927858000,"results":"23","hashOfConfig":"22"},{"size":105,"mtime":1622668378000,"results":"24","hashOfConfig":"22"},{"size":692,"mtime":1622836364000,"results":"25","hashOfConfig":"22"},{"size":240,"mtime":1622654032000,"results":"26","hashOfConfig":"22"},{"size":582,"mtime":1622654900000,"results":"27","hashOfConfig":"22"},{"size":1191,"mtime":1622926540000,"results":"28","hashOfConfig":"22"},{"size":558,"mtime":1622835520000,"results":"29","hashOfConfig":"22"},{"size":5286,"mtime":1622924736000,"results":"30","hashOfConfig":"22"},{"size":247,"mtime":1622670018000,"results":"31","hashOfConfig":"22"},{"size":1726,"mtime":1622734144000,"results":"32","hashOfConfig":"22"},{"size":416,"mtime":1622672146000,"results":"33","hashOfConfig":"22"},{"size":1154,"mtime":1622921712000,"results":"34","hashOfConfig":"22"},{"size":594,"mtime":1622915744000,"results":"35","hashOfConfig":"22"},{"size":1765,"mtime":1622734338000,"results":"36","hashOfConfig":"22"},{"size":345,"mtime":1622738048000,"results":"37","hashOfConfig":"22"},{"size":1512,"mtime":1622836398000,"results":"38","hashOfConfig":"22"},{"size":866,"mtime":1622924720000,"results":"39","hashOfConfig":"22"},{"size":206,"mtime":1622922396000,"results":"40","hashOfConfig":"22"},{"size":431,"mtime":1622926640000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"kmv1wp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\index.js",[],["86","87"],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\App.js",["88"],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\index.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Details\\Details.jsx",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Details\\Details.styles.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\styles.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Main.jsx",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Main.styles.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Form\\Form.jsx",["89"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\n\r\nimport useStyles from \"./Form.styles\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport CustomizedSnackBar from \"../../Snackbar/Snackbar\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [open, setOpen] = useState(false);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n    if (formData.amount > 0 && formData.category !== \"\") {\r\n      const transaction = {\r\n        ...formData,\r\n        amount: Number(formData.amount),\r\n        id: uuidv4(),\r\n      };\r\n\r\n      addTransaction(transaction);\r\n      setFormData(initialState);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackBar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && <>{segment.words.map((w) => w.value).join(\" \")}</>}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((category) => (\r\n              <MenuItem value={category.type} key={category.type}>\r\n                {category.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) => {\r\n            setFormData({ ...formData, date: formatDate(e.target.value) });\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\Form\\Form.styles.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\List\\List.jsx",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Main\\List\\Lists.styles.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\context\\context.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\context\\contextReducer.js",["90"],"const transactions = [{ id: 1 }];\r\n\r\nconst contextReducer = (state, action) => {\r\n  let transactions;\r\n\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      transactions = state.filter((t) => t.id !== action.payload);\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n      return transactions;\r\n    case \"ADD_TRANSACTION\":\r\n      transactions = [action.payload, ...state];\r\n      localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n      return transactions;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contextReducer;\r\n","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\constants\\categories.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\utils\\formatDate.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\useTransactions.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Snackbar\\Snackbar.jsx",["91"],"import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport useStyles from \"./Snackbar.styles\";\r\n\r\nconst CustomizedSnackBar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") return;\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <MuiAlert\r\n          onClose={handleClose}\r\n          severity=\"success\"\r\n          elevation={6}\r\n          variant=\"filled\"\r\n        >\r\n          Transaction successfully created\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackBar;\r\n","D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\Snackbar\\Snackbar.styles.js",[],"D:\\Development\\reactjs\\react-projects\\expense-tracker-revised\\src\\components\\InfoCard.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":21,"column":20,"nodeType":"98","messageId":"99","endLine":21,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":112,"column":6,"nodeType":"102","endLine":112,"endColumn":15,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":7,"nodeType":"106","messageId":"107","endLine":1,"endColumn":19},{"ruleId":"104","severity":1,"message":"108","line":8,"column":9,"nodeType":"106","messageId":"107","endLine":8,"endColumn":16},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["111"],"no-unused-vars","'transactions' is assigned a value but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"114","text":"115"},[3178,3187],"[createTransaction, formData, segment]"]